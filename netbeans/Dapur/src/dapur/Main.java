/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dapur;

import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.sql.*;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author WIN10 test
 */
public class Main extends javax.swing.JFrame {
    Connection conn;
    Statement st;
    ResultSet rs;
    String[] db = "jdbc:mysql://putraput.eu.org:3306/depot,putra,delfira26".split(",");
    Thread ar = new Thread();
    /**
     * Creates new form Main
     */
    public Main() {
        try {
            conn = DriverManager.getConnection(db[0],db[1],db[2]);
        } catch (SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        initComponents();
        showUser();
        
        jTable1.addMouseListener(new MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void mousePressed(MouseEvent e) {
                showPesanan(); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void mouseReleased(MouseEvent e) {
                 //To change body of generated methods, choose Tools | Templates.
            }


            @Override
            public void mouseExited(MouseEvent e) {
                
            }

            @Override
            public void mouseEntered(MouseEvent e) {
                
            }
        });
    }
    
    public void showPesanan(){
        DefaultTableModel mdl = (DefaultTableModel)jTable1.getModel();
        jTextArea1.setText(mdl.getValueAt(jTable1.getSelectedRow(), 4).toString());
        jTextArea2.setText(mdl.getValueAt(jTable1.getSelectedRow(), 5).toString());
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        autoR = new javax.swing.JCheckBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jButton3 = new javax.swing.JButton();
        jToolBar1 = new javax.swing.JToolBar();
        jLabel1 = new javax.swing.JLabel();
        arTime = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nama Depan", "Nama Belakang", "Meja", "List Pesanan", "Keterangan", "Status"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Selesai");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        autoR.setText("Auto Refresh");
        autoR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                autoRActionPerformed(evt);
            }
        });

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane3.setViewportView(jTextArea2);

        jButton3.setText("Dimasak");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                    .addComponent(autoR, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(autoR)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE))
        );

        jToolBar1.setRollover(true);

        jLabel1.setText("Auto Refresh in :");
        jToolBar1.add(jLabel1);

        arTime.setText("Auto Refresh is Off");
        jToolBar1.add(arTime);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 851, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 466, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel mdl = (DefaultTableModel)jTable1.getModel();
        Integer row = jTable1.getSelectedRow();
        if(row==-1){
            JOptionPane.showMessageDialog(rootPane, "Tolong pilih data di tabel");
        }
        else{
            Object idPesanan = mdl.getValueAt(row, 0);
            try {
                PreparedStatement ps = conn.prepareStatement("UPDATE pesanan_inner SET statusPesanan = 2 WHERE idPesanan ="+idPesanan);
                ps.executeUpdate();
            } catch (Exception e) {
                System.out.println(e);
            }
        }
        refreshData();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void autoRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_autoRActionPerformed
        // TODO add your handling code here:
        autoRefresh();
    }//GEN-LAST:event_autoRActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel mdl = (DefaultTableModel)jTable1.getModel();
        Integer row = jTable1.getSelectedRow();
        if(row==-1){
            JOptionPane.showMessageDialog(rootPane, "Tolong pilih data di tabel");
        }
        else{
            Object idPesanan = mdl.getValueAt(row, 0);
            try {
                PreparedStatement ps = conn.prepareStatement("UPDATE pesanan_inner SET statusPesanan = 1 WHERE idPesanan ="+idPesanan);
                ps.executeUpdate();
            } catch (Exception e) {
                System.out.println(e);
            }
        }
        refreshData();
    }//GEN-LAST:event_jButton3ActionPerformed

    public void autoRefresh(){
        if(autoR.isSelected()==true){
            ar = new Thread(){
                public void run(){
                    int sec;
                    try {
                        for(int x=0;x<2;x++){
                            for(int i=0;i<6;i++){
                                Thread.sleep(1000);
                                sec = 5-i;
                                arTime.setText(" "+sec+" Second");
                            }
                            arTime.setText("Refreshing...");
                            Thread.sleep(500);
                            refreshData();
                            if(x==1){
                                x=0;
                            }
                        }
                        
                    } catch (Exception e) {
                        System.out.println("Auto Refresh"+e);
                    }
                }
            };
            ar.start();
        }
        else{
            arTime.setText("Auto Refresh is Off");
            ar.interrupt();
        }
    }
    /**
     * @param args the command line arguments
     */
    
    public ArrayList<dapurUser> userList(){
        ArrayList<dapurUser> userList = new ArrayList();
        try {
            st = conn.createStatement();
            rs = st.executeQuery("SELECT * FROM pesanan_inner WHERE statusPesanan = 0 OR statusPesanan = 1");
            dapurUser user;
            while(rs.next()){
                user = new dapurUser(rs.getInt(1),rs.getString(2),rs.getString(3),rs.getInt(4),rs.getString(5),rs.getString(6),rs.getInt(7));
                userList.add(user);
            }
        } catch (Exception e) {
            System.out.println(e);
        }
        return userList;
    }
    
    
    
    public void showUser(){
        DefaultTableModel mdl = (DefaultTableModel)jTable1.getModel();
        ArrayList<dapurUser> list = userList();
        Object[] col = new Object[7];
        for(int i = 0;i<list.size();i++){
            col[0] = list.get(i).getId();
            col[1] = list.get(i).getfName();
            col[2] = list.get(i).getlName();
            col[3] = list.get(i).getMeja();
            col[4] = list.get(i).getlistPesanan();
            col[5] = list.get(i).getKeterangan();
            col[6] = list.get(i).getstatusPesanan();
            mdl.addRow(col);
        }
    }
    
    public void refreshData(){
        DefaultTableModel mdl = (DefaultTableModel)jTable1.getModel();
        mdl.setRowCount(0);
        showUser();
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel arTime;
    private javax.swing.JCheckBox autoR;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
}
